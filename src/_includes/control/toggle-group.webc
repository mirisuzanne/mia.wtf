<script type="module">
  window.customElements.define('toggle-group', class extends HTMLElement {
    targetEl;
    toggleBtns;

    doPress = (value) => {
      if (!value) { return; }

      this.targetEl.dataset[this.dataset.set] = value;

      if (this.dataset.local) {
        localStorage.setItem(this.dataset.set, value);
      } else if (this.dataset.session) {
        sessionStorage.setItem(this.dataset.set, value);
      }

      this.toggleBtns.forEach((btn) => {
        if (btn.dataset.value === value) {
          btn.setAttribute('aria-pressed', true);
        } else {
          btn.setAttribute('aria-pressed', false);
        }
      });
    }

    init = () => {
      // error on missing attributes
      if (!this.dataset.set) {
        console.error('Toggle group needs a `data-set` attribute');
      }

      // default to root
      this.targetEl = document.querySelector(this.dataset.for || ':root');

      // error if target is missing
      if (!this.targetEl) {
        console.error(`Failed to find target element '${this.dataset.for}'`)
      }

      // set missing values
      this
        .querySelectorAll(':scope button:not([data-value])')
        .forEach((btn) => btn.dataset.value = btn.innerText);

      // get all the available buttons
      this.toggleBtns = this.querySelectorAll(':scope button[data-value]');

      // find a good initial value
      let initValue;

      if (this.dataset.local) {
        initValue = localStorage.getItem(this.dataset.set);
      } else if (this.dataset.session) {
        initValue = sessionStorage.getItem(this.dataset.set);
      }

      if (!initValue) {
        const onTarget = this.targetEl.dataset[this.dataset.set];
        const pressedBtn = this.querySelector(':scope button[aria-pressed]');
        initValue = onTarget || (pressedBtn || this.toggleBtns[0]).dataset.value;
      }

      console.log(initValue);

      // activate the first press
      this.doPress(initValue);
    }

    connectedCallback() {
      this.init();

      this.toggleBtns.forEach((btn) => {
        btn.addEventListener('click', (e) => {
          this.doPress(btn.dataset.value);
        });
      });
    };
  });
</script>
