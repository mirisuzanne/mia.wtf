<script>
  class DialogToggle extends HTMLElement {
    static register(tagName) {
      if ('customElements' in window) {
        customElements.define(tagName || 'dialog-toggle', DialogToggle);
      }
    }

    toggle;
    target;

    get expanded() {
      return this.toggle.getAttribute('aria-expanded') === 'true';
    };

    set expanded(to) {
      this.toggle.setAttribute('aria-expanded', to ? 'true' : 'false');

      if (!to) {
        if (this.target.open) this.target.close();
        return;
      }

      if (this.toggle.dataset.modal || this.target.dataset.modal) {
        this.target.showModal();
      } else {
        this.target.show();
      }
    };

    togglePress = () => {
      this.expanded = !this.expanded;
    }

    #initialAttrs = () => {
      if (!this.toggle.hasAttribute('aria-expanded')) {
        this.expanded = this.target.getAttribute('open');
      }
    }

    connectedCallback() {
      this.toggle = this.querySelector(':scope > button');
      this.target = document.getElementById(this.toggle.getAttribute('aria-controls'));

      this.#initialAttrs();

      this.toggle.addEventListener('click', this.togglePress);
      this.target.addEventListener("close", () => this.expanded = false);
    }

    disconnectedCallback() {
      this.toggle.removeEventListener('click', this.togglePress);
    }
  }

  DialogToggle.register();
  </script>
