button:where(:not([data-btn])) {
  background: var(---btn-off-bg, transparent);
  border: thin solid var(---btn-off-border, var(--border));
  border-radius: 0.25em;
  color: inherit;
  padding: 0 var(--gap);

  &:hover,
  &:active {
    ---btn-off-bg: var(--mark);
    ---btn-off-border: var(--accent);
  }

  &[aria-pressed=true],
  &[aria-expanded=true] {
    background: var(--accent);
    color: var(--accent-text);
    border-color: currentColor;
  }

  [aria-hidden] {
    text-shadow: 0 0 3px var(--shadow);
  }
}

[data-btn] {
  background: unset;
  border: var(--btn-border, unset);
  padding: var(--btn-padding, unset);
}

[data-btn='text'] {
  --btn-padding: 0.25em 0.75em;
  --btn-border: thin solid var(--accent);
  border-radius: 0.25em;

  &:hover,
  &:active {
    border-color: var(--border);
  }
}

[data-btn='icon'] {
  font-style: normal;
  transition: filter 100ms ease;

  &:hover,
  &:active {
    filter:
      drop-shadow(1px 1px 0 var(--shadow))
      drop-shadow(
        var(--btn-press, 0.125em)
        var(--btn-press, 0.125em)
        0
        var(--accent)
      );
  }

  &:active {
    --btn-press: 2px;
  }
}

toggle-control {
  --toggle-control-radius: 0.125em;
  align-items: stretch;
  border: thin solid var(--accent);
  border-radius: var(--toggle-control-radius);
  display: flex;

  [aria-pressed] {
    border: unset;
    border-radius: unset;
    flex: auto;
    padding: 0.125em 0.75em;
  }

  [aria-pressed=true] {
    background: var(--accent);
    color: var(--accent-text);
  }

  [aria-pressed] + [aria-pressed] {
    border-inline-start: inherit;
  }
}
